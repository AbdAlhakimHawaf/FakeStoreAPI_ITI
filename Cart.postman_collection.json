{
	"info": {
		"_postman_id": "d373d173-d69a-4fb6-8652-58f0dab07db1",
		"name": "Cart",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "27584831",
		"_collection_link": "https://www.postman.com/orange-firefly-220533/workspace/fakestoreapi-iti/collection/27584831-d373d173-d69a-4fb6-8652-58f0dab07db1?action=share&source=collection_link&creator=27584831"
	},
	"item": [
		{
			"name": "Get All Carts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Assertion Of First Cart & First Item Quantity is 4\", function () {\r",
							"       pm.expect(response[0].products[0].quantity).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://fakestoreapi.com/carts"
			},
			"response": []
		},
		{
			"name": "Get Cart #5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Assertion Of 5th Cart & First Item Product Id is 7\", function () {\r",
							"       pm.expect(response.products[0].productId).to.eql(7);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://fakestoreapi.com/carts/5"
			},
			"response": []
		},
		{
			"name": "Get Only 5 Carts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"pm.test(\"Assertion Of Quantity Of Getted Carts is Limited To 5\", function () {\r",
							"    pm.expect(response.length).to.eql(5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fakestoreapi.com/carts?limit=5",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"carts"
					],
					"query": [
						{
							"key": "limit",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Carts Sorted Desc",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"pm.test(\"Assertion Of First Cart ID Is 7 and Last ID is 1\", function () {\r",
							"    pm.expect(response[0].id).to.eql(7);\r",
							"    pm.expect(response[6].id).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fakestoreapi.com/carts?sort=desc",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"carts"
					],
					"query": [
						{
							"key": "sort",
							"value": "desc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Cart Of Date Between 10-12-2019 and 10-10-2020",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"const startDate = new Date('2019-12-10').getTime();\r",
							"const endDate = new Date('2020-10-10').getTime();\r",
							"\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Assertion Of Getted Date is between 10-12-2019 & 10-10-2020\", function () {\r",
							"    for (let data of response) {\r",
							"        var currentDate = new Date(data.date).getTime();\r",
							"        pm.expect(currentDate).to.be.at.least(startDate);\r",
							"        pm.expect(currentDate).to.be.at.most(endDate);\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fakestoreapi.com/carts?startdate=2019-12-10&enddate=2020-10-10",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"carts"
					],
					"query": [
						{
							"key": "startdate",
							"value": "2019-12-10"
						},
						{
							"key": "enddate",
							"value": "2020-10-10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Cart Of User ID #2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"pm.test(\"Assertion Of Gotten Cart is Of User #2\", function () {\r",
							"    pm.expect(response[0].userId).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://fakestoreapi.com/carts/user/2"
			},
			"response": []
		},
		{
			"name": "Updating Of Cart #7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Assertion Of Cart #7 Updated Data\", function () {\r",
							"       pm.expect(response.id).to.eql(7);\r",
							"       pm.expect(response.userId).to.eql(9);\r",
							"       pm.expect(response.products[0].productId).to.eql(18);\r",
							"       pm.expect(response.products[0].quantity).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 9,\r\n    \"products\": [\r\n            {\r\n                \"productId\": 18,\r\n                \"quantity\": 1\r\n            }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://fakestoreapi.com/carts/7"
			},
			"response": []
		},
		{
			"name": "Delete Cart #6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Assertion Of Deleted Cart is #6\", function () {\r",
							"       pm.expect(response.id).to.eql(6);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "https://fakestoreapi.com/carts/6"
			},
			"response": []
		}
	]
}